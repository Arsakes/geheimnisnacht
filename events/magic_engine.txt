##############################################
#
# @author Pietrko <p.l.stepnicki@gmail.com>
# @description Spell engine events
# @version 0.1
# @modified_on 0.1.2
# @wip
# @compatibility 2.2.0
#
#
# main spell events    0-19
# magic potential gain 20-30
#
#
##############################################
namespace = magicengine
#
# MAIN SPELL EVENTS 
#
# Channeling action gives some magic power points not exceding the maximal power
# maximal safe power equal to SW * 2 (willpower times two)
# Channeling and magic points mechanics is used only in dire circumstances
# when casting strategic spells character have access to all sort of 
# magic power containters etc TODO
character_event = {
    id = magicengine.0
    is_triggered_only = yes
    hide_window = yes
 
    # this is channeling  of magic power
    # mp = mp + k4 + (magic_level - 1)
    immediate = {
        # k4 roll
        character_event = { id = dicethrow.11 }
        if = {
            limit = { trait = magic_power_magister }
            change_variable = { which = "magic_points" value = 1 }
        }
        if = {
            limit = { trait = magic_power_lord }
            change_variable = { which = "magic_points" value = 2 }
        }
        if = {
            limit = { trait = magic_power_archmaster }
            change_variable = { which = "magic_points" value = 3 }
        }
        change_variable = { which = "magic_points" which = "k4_roll" }
 
        # clear variable
        set_variable = { which  = "k4_roll" value = 0 }
        # check if magic points don't excede the maximal value
        #
        # set willpower, multiply, add, compare
        character_event = { id = dicethrow.0 }
        multiply_variable = { which = "SW" value = 2 }
        if = {
            limit = { trait = magic_power_magister }
            change_variable = { which = "SW" value = 1 }
        }
        if = {
            limit = { trait = magic_power_lord }
            change_variable = { which = "SW" value = 2 }
        }
        if = {
            limit = { trait = magic_power_archmaster }
            change_variable = { which = "SW" value = 3 }
        }
        # do actual test
        if = {
            # > or =      
            limit = { check_variable = { which = "magic_points" which = "SW" } }
            set_variable = { which = "magic_points" which = "SW" }
        }
        # clear
        set_variable = { which =  "SW" value = 0 }
    }
}
#############################################################################################
#
# SPELLCRAFT CHECK
#
# (learning/3) - magic_cost(1-15) + lvl_mod(6,8,9,10) - k10 > 0
character_event = {
    id = magicengine.1
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        # get intelligence (Int)
        character_event = { id = dicethrow.1 }
        # roll k6
        character_event = { id = dicethrow.10 }
        # calculate
        subtract_variable = { which = "Int" which = "k10_roll" }
        subtract_variable = { which = "Int" which = "magic_spell_cost" }

        # modifier from experience
        if = {
            limit = { trait = magic_power_adept }
            change_variable = { which = "Int" value = 6 }
        }
        if = {
            limit = { trait = magic_power_magister }
            change_variable = { which = "Int" value = 8 }
        }
        if = {
            limit = { trait = magic_power_lord }
            change_variable = { which = "Int" value = 9 }
        }
        if = {
            limit = { trait = magic_power_archmaster }
            change_variable = { which = "Int" value = 10 }
        }

        # Handle mistcasts and success
        # not successfull check:  out >= 0
        if = { 
            limit = { check_variable = { which =  "Int" value = 0 }} 
            set_character_flag = last_spell_success
        }
        # fail: -3 < out < -1
        if = { 
            limit = { 
                NOT = { check_variable = { which = "Int" value = -1 } }
                check_variable = { which = "lnt" value = -3 }
            }
            # trigger mistcasts
            random_list = {
                33 = { character_event = { id = magicengine.3 }} # minor mistcast
                33 = { character_event = { id = magicengine.2 }} # failure
                34 = { set_character_flag = last_spell_sucess } # sucess
            }
        }
        # big failure: out < -3
        if = { 
            limit = { NOT = { check_variable = { which = "k10_roll" value = -3 } }}
            random_list = {
                33 = { character_event = { id = magicengine.4 }} # bad mistcast
                33 = { character_event = { id = magicengine.3 }} # minor mistcast
                34 = { character_event = { id = magicengine.2 }} # failure
            }
        }
        # clear all variables
        set_variable = { which = "k10_roll" value = 0 }
        set_variable = { which = "Int" value = 0 }      
        set_variable = { which = "magic_spell_cost" value = 0 }      
    }
}
#
#
# MISTCAST & CAST FAILURE EFFECTS EVENTS
#
# Spell failure event  (no consequences)
character_event = {
    id = magicengine.2
    desc = "EVTDESC_MAGICENGINE_2"
    is_triggered_only = yes
     
    option = {
        name = OK
    }
}
character_event = {
    id = magicengine.3
    desc = "EVTDESC_MAGICENGINE_3"
    is_triggered_only = yes
    
    immediate = {
        change_variable = { which = "duel_hp" value = -1 }
    }
    option = {
        name = OK
        random_list = { 
            50 = { add_trait = wounded }
            50 = { }
        }
    }
}
character_event = {
    id = magicengine.4
    desc = "EVTDESC_MAGICENGINE_4"
    is_triggered_only = yes
  
    immediate = {
        change_variable = { which = "duel_hp" value = -2 } 
    }
   
    option = {
        name = OK
        random_list = {
            # mutation
            50 = {
                custom_tooltip = { 
                    text = "TOOLTIP_MAGICENGINE_MUTATION"
                    character_event = { id = mutation.1 } 
                }
            }
            25 = {
                add_trait = maimed
            }
            25 = {
                add_trait = wouned
            }
        }
    }
}
# Duel action: Channeling
character_event = {
    id = magicengine.5
    hide_window  = yes
    is_triggered_only = yes
    
    immediate  = {
        # regenerate magic points to the level of SW 
        # check SW
        character_event = { id = "dicethrow.0" } 
        if = {
            limit = { 
                NOT = { check_variable = { which = "magic_points" which = "SW" }}
                OR = { 
                    trait = magic_power_adept
                    trait = magic_power_magister
                    trait = magic_power_lord
                    trait = magic_power_archmaster
                }
            }
            change_variable = { which = "magic_points" value = 1 }
        }
        # clean
        set_variable = { which = "SW" value = 0 }
    }
}

#########################################################
#
# DUEL SPELL DISPATCHERS
#
# Those events are used to cast correct spell
# via generic <cast typ X spell> moves in duel
#
# There is some trickery in it:
# dispachting events are send to ENEMY for proper definiton of
# FORM, ROOT
#
# so:
# 
# FROM = FROMFROM = FROMFROMFROM =  caster of spell
# ROOT = target of spell
#
##########################################################a
# offensive spell
character_event = {
    id = magicengine.6
    hide_window = yes
    is_triggered_only = yes

    immediate = { 
        FROM = {
            # INIT
            if = { 
                 limit = { trait = lore_light }
                 set_variable = {  which = "magic_spell_cost" value = 3 }
            }

            # TEST of spellcraft
            character_event = { id = magicengine.1 }

            # OUTCOME
            if = {
                limit = { 
                    has_character_flag = last_spell_success 
                    trait = lore_light
                }
                character_event = { id = hysh.10 }
            }

            # CLEANING
            clr_character_flag = last_spell_success
        }
    }
}
# defensive spell
character_event = {
    id = magicengine.7
    hide_window = yes
    is_triggered_only = yes

    immediate = { 
        FROM = {
            # INIT
            if = { 
                 limit = { trait = lore_light }
                 set_variable = {  which = "magic_spell_cost" value = 3 }
            }

            # TEST of spellcraft
            character_event = { id = magicengine.1 }

            # OUTCOME
            if = {
                limit = { 
                    has_character_flag = last_spell_success 
                    trait = lore_light
                }
                character_event = { id = hysh.11 }
            }

            # CLEANING
            clr_character_flag = last_spell_success
        }
    }
}

# buff spell
character_event = {
    id = magicengine.8
    hide_window = yes
    is_triggered_only = yes

    immediate = { 
        FROM = {
            # INIT
            if = { 
                 limit = { trait = lore_light }
                 set_variable = {  which = "magic_spell_cost" value = 4 }
            }

            # TEST of spellcraft
            character_event = { id = magicengine.1 }

            # OUTCOME
            if = {
                limit = { 
                    has_character_flag = last_spell_success 
                    trait = lore_light
                }
                character_event = { id = hysh.12 }
            }

            # CLEANING
            clr_character_flag = last_spell_success
        }
    }

}
# special lore spell
character_event = {
    id = magicengine.9
    hide_window = yes
    is_triggered_only = yes

    immediate = { 
        FROM = {
            # INIT
            if = { 
                limit = { trait = lore_light }
                set_variable = {  which = "magic_spell_cost" value = 2 }
            }

            # TEST of spellcraft
            character_event = { id = magicengine.1 }

            # OUTCOME
            if = {
                limit = { 
                    has_character_flag = last_spell_success 
                    trait = lore_light
                }
                character_event = { id = hysh.13 }
            }

            # CLEANING
            clr_character_flag = last_spell_success
        }
    }
}

# Strategic spell cooldown event
character_event = {
    id = magicengine.11
    is_triggered_only = yes
    hide_window = yes

    immediate = { 
        clr_character_flag = strategic_spell_used
    }
}


##########################################################
#
# On birth events and gaining magic potential
#
#########################################################
#
# magic_potential_1 : low
# magic_potential_2 : medium
# magic_potential_3 : high
#
character_event = {
    id = magicengine.20
    desc = "Inheritance of magic potential" #FIXME delte desc
    is_triggered_only = yes
    #hide_windw = yes 

    immediate = {
        # case 1,1
        if = {
            limit = {
                AND = {
                    father = { has_character_flag = magic_potential_1 }
                    mother = { has_character_flag = magic_potential_1 }
                }
            }
            random_list = {
                29 = { }
                55 = { set_character_flag = magic_potential_1 }
                12 = { set_character_flag = magic_potential_2 }
                4 = { set_character_flag = magic_potential_3 }
            }
        }
        # case 2,2
        if = {
            limit = {
                AND = {
                    father = { has_character_flag = magic_potential_2 }
                    mother = { has_character_flag = magic_potential_2 }
                }
            }
            random_list = {
                3 = { }
                32 = { set_character_flag = magic_potential_1 }
                53 = { set_character_flag = magic_potential_2 }
                12 = { set_character_flag = magic_potential_3 }
            }
        }
        # case 3,3
        if = {
            limit = {
                AND = {
                    father = { has_character_flag = magic_potential_3 }
                    mother = { has_character_flag = magic_potential_3 }
                }
            }
            random_list = {
                1 = { }
                3 = { set_character_flag = magic_potential_1 }
                36 = { set_character_flag = magic_potential_2 }
                60 = { set_character_flag = magic_potential_3 }
            }

        }
        # Mixed cases
        # case 1,2
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_1 }
                        mother = { has_character_flag = magic_potential_2 }
                    }
                    AND = {
                        father = { has_character_flag = magic_potential_2 }
                        mother = { has_character_flag = magic_potential_1 }
                    }
                }
            }
            random_list = {
                19 = { }
                40 = { set_character_flag = magic_potential_1 }
                32 = { set_character_flag = magic_potential_2 }
                9 = { set_character_flag = magic_potential_3 }
            }
        }
        # case 1,3
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_1 }
                        mother = { has_character_flag = magic_potential_3 }
                    }
                    AND = {
                        father = { has_character_flag = magic_potential_3 }
                        mother = { has_character_flag = magic_potential_1 }
                    }
                }
            }
            # do stuff
            random_list = {
                17 = { }
                28 = { set_character_flag = magic_potential_1 }
                31 = { set_character_flag = magic_potential_2 }
                24 = { set_character_flag = magic_potential_3 }
            }

        }
        # 2,3
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_2 }
                        mother = { has_character_flag = magic_potential_3 }
                    }
                    AND = {
                        father = { has_character_flag = magic_potential_3 }
                        mother = { has_character_flag = magic_potential_2 }
                    }
                }
            }
            # do stuff
            random_list = {
                4 = { }
                20 = { set_character_flag = magic_potential_1 }
                42 = { set_character_flag = magic_potential_2 }
                34 = { set_character_flag = magic_potential_3 }
            }
        }
        # case of only one parent being mage
        # 1,0
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_1 }
                        mother = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                    AND = {
                        mother = { has_character_flag = magic_potential_1 }
                        father = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                }
            }
            # do stuff
            random_list = {
                49 = { }
                39 = { set_character_flag = magic_potential_1 }
                11 = { set_character_flag = magic_potential_2 }
                1 = { set_character_flag = magic_potential_3 }
            }

        }
        # 2,0
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_1 }
                        mother = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                    AND = {
                        mother = { has_character_flag = magic_potential_1 }
                        father = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                }
            }
            # do stuff
            random_list = {
                30 = { }
                34 = { set_character_flag = magic_potential_1 }
                24 = { set_character_flag = magic_potential_2 }
                12 = { set_character_flag = magic_potential_3 }
            }

        }
        # 3,0
        if = {
            limit = {
                OR = { 
                    AND = {
                        father = { has_character_flag = magic_potential_1 }
                        mother = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                    AND = {
                        mother = { has_character_flag = magic_potential_1 }
                        father = { 
                            NOT = { has_character_flag = magic_potential_1 }
                            NOT = { has_character_flag = magic_potential_2 }
                            NOT = { has_character_flag = magic_potential_3 }
                        }
                    }
                }
            }
            # do stuff
            random_list = {
                23 = { }
                33 = { set_character_flag = magic_potential_1 }
                24 = { set_character_flag = magic_potential_2 }
                20 = { set_character_flag = magic_potential_3 }
            }

        }
        # TODO make some adjustments for elves and other races maybe?
        # case of non-magical parents (both)
        # 0,0
        if = {
            limit = {
               NOT = { has_character_flag = magic_potential_1 }
               NOT = { has_character_flag = magic_potential_2 }
               NOT = { has_character_flag = magic_potential_3 }
            }
            # do stuff
            random_list = {
                88 = { }
                 8 = { set_character_flag = magic_potential_1 }
                 3 = { set_character_flag = magic_potential_2 }
                 1 = { set_character_flag = magic_potential_3 }
            }
        }
    }
    option = {
        name = "ok"
    }
}
